# credit : https://github.com/mikekenneth/twitter_data-lakehouse_minio_drill_superset
# please copy sample.env into .env and change the values.
version: '3.4'

x-common:
  &common
  image: apache/airflow:2.7.1
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./app/dags:/opt/airflow/dags
    - ./app/logs:/opt/airflow/logs
  restart: always
  networks:
    - services

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  # minio:
  #   image: minio/minio:latest
  #   ports:
  #     - '9000:9000'
  #     - '9090:9090'
  #   volumes:
  #     - './data:/data'
  #   env_file:
  #     - .env
  #   restart: always
  #   networks:
  #    - services
  #   command: server --console-address ":9090" /data
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "curl",
  #         "-f",
  #         "http://localhost:9000/minio/health/live"
  #       ]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3


  postgres:
    image: postgres:14-alpine
    container_name: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    restart: always
    networks:
      - services

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:8080/health"
        ]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags}
        exec /entrypoint airflow version

volumes:
  postgres-db-volume:

networks: 
  services:
    name: ${APP_NAME:-irbigdata}_network

